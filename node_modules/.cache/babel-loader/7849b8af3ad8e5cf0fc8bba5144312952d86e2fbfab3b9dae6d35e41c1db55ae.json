{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/LEARN-academy/portfolio/portfolio/home-page/src/components/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Card, CardBody, CardTitle, Accordion, AccordionItem, AccordionHeader, AccordionBody } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [open, setOpen] = useState(\"1\");\n  const toggle = id => {\n    if (open === id) {\n      setOpen();\n    } else {\n      setOpen(id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    color: \"dark\",\n    inverse: true,\n    className: \"primary-card overflow-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"treasurehunt\",\n      src: \"home-page/src/components/images/treasurehunt.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        tag: \"h5\",\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n        flush: true,\n        open: open,\n        toggle: toggle,\n        children: [/*#__PURE__*/_jsxDEV(AccordionItem, {\n          children: [/*#__PURE__*/_jsxDEV(AccordionHeader, {\n            targetId: \"1\",\n            children: \"Treasure Hunt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AccordionBody, {\n            accordionId: \"1\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"A project based on the first thing I wrote as a student at LEARN academy. I have taken what was originally written with just HTML, CSS, and JavaScript and rebuilt it for React.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Live:\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://corey-cass-treasurehunt.onrender.com/\",\n                children: \"Treasure Hunt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"GitHub:\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://github.com/TheLavitz/treasurehunt\",\n                children: \"Treasure Hunt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccordionItem, {\n          children: [/*#__PURE__*/_jsxDEV(AccordionHeader, {\n            targetId: \"2\",\n            children: \"Text-Based Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AccordionBody, {\n            accordionId: \"2\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"This project was Ruby focused and processes user input through a series of prompts in a text adventure. This was also developed as a group of three in a mob programming format.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"GitHub:\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://github.com/TheLavitz/text-based-game\",\n                children: \"Text-Based Game\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccordionItem, {\n          children: [/*#__PURE__*/_jsxDEV(AccordionHeader, {\n            targetId: \"3\",\n            children: \"Cat Tinder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AccordionBody, {\n            accordionId: \"3\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Starting as a pair programming project but transitioning to a three person mob programming format this application features a React frontend connected to a Rails backend and demonstrates an understanding of CRUD operations. RSpec testing is included on the backend as well as Testing Library testing on the React frontend.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"GitHub:\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://github.com/TheLavitz/cat-tinder-frontend\",\n                children: \"Frontend\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"GitHub:\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://github.com/TheLavitz/cat-tinder-backend\",\n                children: \"Backend\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"SrjOZdjLUc20bKSo3T49WDXWp3o=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","Card","CardBody","CardTitle","Accordion","AccordionItem","AccordionHeader","AccordionBody","jsxDEV","_jsxDEV","Projects","_s","open","setOpen","toggle","id","color","inverse","className","children","alt","src","fileName","_jsxFileName","lineNumber","columnNumber","tag","flush","targetId","accordionId","href","_c","$RefreshReg$"],"sources":["/Users/learnacademy/Desktop/LEARN-academy/portfolio/portfolio/home-page/src/components/Projects.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  Accordion,\n  AccordionItem,\n  AccordionHeader,\n  AccordionBody,\n} from \"reactstrap\";\n\nconst Projects = () => {\n  const [open, setOpen] = useState(\"1\");\n  const toggle = (id) => {\n    if (open === id) {\n      setOpen();\n    } else {\n      setOpen(id);\n    }\n  };\n\n  return (\n    <Card color=\"dark\" inverse className=\"primary-card overflow-auto\">\n      <img\n        alt=\"treasurehunt\"\n        src=\"home-page/src/components/images/treasurehunt.png\"\n      />\n      <CardBody>\n        <CardTitle tag=\"h5\">Projects</CardTitle>\n        <Accordion flush open={open} toggle={toggle}>\n          <AccordionItem>\n            <AccordionHeader targetId=\"1\">Treasure Hunt</AccordionHeader>\n            <AccordionBody accordionId=\"1\">\n              <p>\n                A project based on the first thing I wrote as a student at LEARN\n                academy. I have taken what was originally written with just\n                HTML, CSS, and JavaScript and rebuilt it for React.\n              </p>\n              <p>\n                Live:{\" \"}\n                <a href=\"https://corey-cass-treasurehunt.onrender.com/\">\n                  Treasure Hunt\n                </a>\n              </p>\n              <p>\n                GitHub:{\" \"}\n                <a href=\"https://github.com/TheLavitz/treasurehunt\">\n                  Treasure Hunt\n                </a>\n              </p>\n            </AccordionBody>\n          </AccordionItem>\n          <AccordionItem>\n            <AccordionHeader targetId=\"2\">Text-Based Game</AccordionHeader>\n            <AccordionBody accordionId=\"2\">\n              <p>\n                This project was Ruby focused and processes user input through a\n                series of prompts in a text adventure. This was also developed\n                as a group of three in a mob programming format.\n              </p>\n              <p>\n                GitHub:{\" \"}\n                <a href=\"https://github.com/TheLavitz/text-based-game\">\n                  Text-Based Game\n                </a>\n              </p>\n            </AccordionBody>\n          </AccordionItem>\n          <AccordionItem>\n            <AccordionHeader targetId=\"3\">Cat Tinder</AccordionHeader>\n            <AccordionBody accordionId=\"3\">\n              <p>\n                Starting as a pair programming project but transitioning to a\n                three person mob programming format this application features a\n                React frontend connected to a Rails backend and demonstrates an\n                understanding of CRUD operations. RSpec testing is included on\n                the backend as well as Testing Library testing on the React\n                frontend.\n              </p>\n              <p>\n                GitHub:{\" \"}\n                <a href=\"https://github.com/TheLavitz/cat-tinder-frontend\">\n                  Frontend\n                </a>\n              </p>\n              <p>\n                GitHub:{\" \"}\n                <a href=\"https://github.com/TheLavitz/cat-tinder-backend\">\n                  Backend\n                </a>\n              </p>\n            </AccordionBody>\n          </AccordionItem>\n        </Accordion>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Projects;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}